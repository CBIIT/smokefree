<?php
/**
 * @file
 * Code for the Springboard feature.
 */


include_once 'icfi_springboard.features.inc';

/**
 * Implements hook_block_info().

function icfi_springboard_block_info() {
  $blocks = array();
  $blocks['create_an_action_deck'] = array(
    'info' => t('Create An Action Deck'),
  );

  $blocks['cards_in_your_action_deck'] = array(
    'info' => t('Cards in Your Action Deck'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().

function icfi_springboard_block_view($delta='') {
  $block = array();

  switch($delta) {
    case 'create_an_action_deck' :
      $block['content'] = _create_an_action_deck_block_view();
      break;
    case 'cards_in_your_action_deck' :
      $block['content'] = _cards_in_your_action_deck_block_view();
      break;
  }

  return $block;
}

function _springboard_related_vocabularies() {
  $vocabularies = array("symptoms" => "Symptoms", "stress_mood" => "Stress & Mood", "wellness" => "Wellness", "get_support" => "Get Support");
  return $vocabularies;
}

/**
 * Implements hook_block_view

function _create_an_action_deck_block_view() {
  $block_content = "";
  $vocabularies = _springboard_related_vocabularies();
  $i = 0;
  foreach ($vocabularies as $key => $val) {
    $block_content .= "<h2>" . $val . "</h2>";
    $v = taxonomy_vocabulary_machine_name_load($key);
    if ($terms = taxonomy_get_tree($v->vid)) {
      foreach ($terms as $term) {
        $form = drupal_get_form('_action_deck_form_' . $i, $key, $term->name);
        $block_content .= drupal_render($form);
        $i++;
      }
    }
  }
  return $block_content;
}

/**
 * Implements hook_forms

function icfi_springboard_forms($form_id) {
  $forms = array();
  if (strpos($form_id, '_action_deck_form_') === 0) {
    $forms[$form_id] = array(
      'callback' => '_action_deck_form',
    );
  }
  return $forms;
}

function _action_deck_form($form, &$form_state, $vocab, $termname) {
  $term = str_replace(' ', '_', $termname);
  $form['vocab'] = array(
    '#type' => 'hidden',
    '#value' => $vocab,
  );

  $form['term'] = array(
    '#type' => 'hidden',
    '#value' => $term,
  );

  $form['termname'] = array(
    '#markup' => $termname,
  );

  if (isset($_COOKIE[$vocab][$term])) {
    $form['remove'] = array(
      '#type' => 'submit',
      '#value' => t('-'),
    );
  }
  else {
    $form['add'] = array(
      '#type' => 'submit',
      '#value' => t('+'),
    );
  }
  return $form;
}

function _action_deck_form_submit($form, &$form_state) {
  $vocab = $form_state['values']['vocab'];
  $term = $form_state['values']['term'];
  $expire = 0;
  if (isset($form_state['clicked_button']['#value']) && ($form_state['clicked_button']['#value'] == '-'))
  {
    $expire = time() - 3600;
  }
  setcookie($vocab . "[" . $term . "]", $term, $expire);
}

/**
 * Implements hook_block_view

function _cards_in_your_action_deck_block_view() {
  $vocabularies = _springboard_related_vocabularies();
  $block_content = $content = "";
  $i = 1000;
  $count = 0;
  foreach ($vocabularies as $key => $val) {
    if (isset($_COOKIE[$key])) {
      $content .= "<h2>" . $val . "</h2>";
      foreach ($_COOKIE[$key] as $name => $value) {
        $form = drupal_get_form('_action_deck_form_' . $i, $key, str_replace('_', ' ', $value));
        $content .= drupal_render($form);
        $i++;
        $count++;
      }
    }
  }
  $block_content .= "<h2>" . $count . " Cards in your Action deck</h2>";
  $block_content .= $content;
  return $block_content;
}
*/